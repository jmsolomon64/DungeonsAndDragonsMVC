@using DungeonsAndDragons.Model.Equipment
@using Newtonsoft.Json
@inject HttpClient _client;


<h3>Inventory</h3>

<table class="table">
    <thead>
        <tr>
            <th>Equipment Id</th>
            <th>Name</th>
            <th>Weight</th>
            <th>Cost</th>
            <th>Description</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Items) {
        <tr>
            <td>@item.EquipmentId</td>
            <td>@item.Name</td>
            <td>@item.Weight</td>
            <td>@item.Cost</td>
            <td>@item.Description</td>
        </tr>
}
    </tbody>
</table>


@code {
    public List<EquipmentDetail> Items { get; set; } = new List<EquipmentDetail>();
    public bool isRunning = false;

    //Method called on initial render
    protected override async Task OnInitializedAsync()
    {
        await GetAllItemsAsync();
    }

    //I want to use client to call out to API in project to pull all Items and display their information.
    private async Task GetAllItemsAsync()
    {
        Items = await GetAllItems();
    }

    public async Task<List<EquipmentDetail>> GetAllItems()
    {
        var results = JsonConvert.DeserializeObject<List<EquipmentDetail>>(await _client.GetStringAsync("http://localhost:5091/api/Equipment/ViewAllItems"));

        return results;
    }

    private void StartRun()
    {
        isRunning = true;
    }
}